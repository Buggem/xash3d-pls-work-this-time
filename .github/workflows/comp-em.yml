name: Build & Deploy Engine
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include:
          # For a Linux build we specifically want the OLDEST Ubuntu as possible
          # to be crossdistribution compatible, otherwise use ubuntu-latest.
          - os: ubuntu-20.04
            targetos: emscripten
            targetarch: i386
    env:
      SDL_VERSION: 2.30.3
      GH_CPU_ARCH: ${{ matrix.targetarch }}
    steps:
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 18
    
    - name: Preparing build
      
      run: |
        which node
        cd ~/
        
        git clone "https://github.com/Buggem/emscripten-xash3d" -b xash3d
        mv emscripten-xash3d emscripten
        wget "https://github.com/FWGS/emscripten-fastcomp/releases/download/xash3d-0.1/fastcomp.txz" -O - |tar xJ
        
        cd $OLDPWD
        
        git clone https://github.com/Buggem/xash3d-pls-work-this-time ./xash3d
        cd xash3d
        git submodule init && git submodule update
        git clone https://github.com/Buggem/hlsdk-portable ./hlsdk
        ./contrib/mittorn/setup.sh # Setup makefile
        cd engine
        git clone https://github.com/FWGS/gl-wes-v2 -b webgl-vbo
        git clone https://github.com/FWGS/nanogl

    - name: Build Xash3D

      run: |
        cd xash3d/engine
        ls
        ln -s "$(builtin cd "../"; pwd)" ~/xash-em
        ~/emscripten/emcc --version # init emcc and stuffs :D
        rm ~/.emscripten
        wget "https://raw.githubusercontent.com/Buggem/xash3d-pls-work-this-time/refs/heads/master/.emscripten" -O ~/.emscripten
        export NODE="$(which node)"
        ~/emscripten/emcc --llvm-lto 3 -s INLINING_LIMIT=10 -s USE_SDL=2 -Os -g0 -Wall -Wextra -Wsign-compare -Wno-unknown-pragmas -Wno-missing-field-initializers -Wno-unused-parameter -m32  -Inanogl -Inanogl/GL -Igl-wes-v2/src -Icommon -I../common -I. -I../pm_shared -Iclient -Iserver -Iclient/vgui -Icommon/sdl -DDEFAULT_DEV=5 -DXASH_SDL_DISABLE_RESIZE -DDEFAULT_MODE_WIDTH=640 -DDEFAULT_MODE_HEIGHT=480 -DDEFAULT_FULLSCREEN=0 -DWES_WEBGL -DXASH_ALLOW_SAVERESTORE_OFFSETS -DUSE_STB_SPRINTF=0 -DNO_SJLJ -DXASH_BUILD_COMMIT=\"de8ab2\" -DNO_SJLJ -DXASH_FASTSTR -DXASH_SDL -DXASH_WES -D__MULTITEXTURE_SUPPORT__  -DEGL_LIB=\"libEGL.so\" -DSINGLE_BINARY -c "gl-wes-v2/src/wes_shader.c" -o "owouwuaaaaaaaaaaaaaaaaaaaaaa.o"  -Wno-unused-result -fvisibility=hidden
        make -f Makefile.emscripten -j5
        git clone https://github.com/Buggem/microndk
        
        cd "$(builtin cd "../hlsdk/cl_dll"; pwd)"
        make -f "$(builtin cd "../../engine/microndk"; pwd)/Microndk.mk" CC="$(which emcc)" CXX="$(which em++)"
        cd ../
        cd dlls
        make -f "$(builtin cd "../../engine/microndk"; pwd)/Microndk.mk" CC="$(which emcc)" CXX="$(which em++)"
        ls ../
    - name: Upload engine (artifacts)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.targetos }}-${{ matrix.targetarch }}
        path: ~/xash-em
